{"version":3,"sources":["App.js","Logs.js","reportWebVitals.js","index.js"],"names":["App","useState","items","setitems","value","setValue","hits","setHits","validationError","setValidationError","location","useLocation","history","useHistory","a","query","search","replace","axios","res","sortedResult","_","sortBy","data","results","o","file","searchResults","map","i","log","match","split","name","slice","text","join","onClick","push","line","substring","style","color","display","width","highlightClassName","searchWords","autoEscape","textToHighlight","e","key","reset","err","length","useEffect","Search","className","fontSize","height","onChange","target","onKeyDown","padding","margin","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","containerClassName","activeClassName","Logs","path","pathname","randomColor","mem","y","Math","random","toString","arr","flat","index","timestamp","to","id","hash","element","document","getElementById","scrollIntoView","block","GetText","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","enableDarkMode","brightness","contrast","sepia","ReactDOM","render","StrictMode","exact"],"mappings":"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","file":"static/js/main.1e8ac69b.chunk.js","sourcesContent":["import \"./App.css\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport { useLocation } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport Highlighter from \"react-highlight-words\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactPaginate from \"react-paginate\";\n\nfunction App() {\n    const [items, setitems] = useState([]);\n    const [value, setValue] = useState(\"\");\n    const [hits, setHits] = useState(\"\");\n    const [validationError, setValidationError] = useState(\"\");\n    const location = useLocation();\n    const history = useHistory();\n\n    async function Search(location) {\n        const query = location.search.replace(\"?\", \"\");\n        const res = await axios(\"https://logs.beuke.org/search/\" + query);\n        const sortedResult = _.sortBy(res.data.results, [(o) => o.file]);\n        setHits(res.data.hits);\n        const searchResults = sortedResult.map((i) => {\n            if (!i) return;\n            const log = i.match.split(\" \");\n            const name = log[1].slice(0, 20);\n            const text = log.slice(2).join(\" \");\n\n            return (\n                <tr\n                    onClick={() =>\n                        history.push(\"/logs/\" + i.file + \"#\" + i.line)\n                    }\n                >\n                    <td>20{i.file.substring(8, 16)} </td>\n                    <td>\n                        <div style={{ color: \"grey\", display: \"inline\" }}>\n                            {name}\n                        </div>\n                    </td>\n                    <td style={{ width: 4000 }}>\n                        <div style={{ color: \"white\", display: \"inline\" }}>\n                            <Highlighter\n                                highlightClassName=\"YourHighlightClass\"\n                                searchWords={[query.replace(/&page=\\d+/, \"\")]}\n                                autoEscape={true}\n                                textToHighlight={text}\n                            />\n                        </div>\n                        <br />\n                        <br />\n                    </td>\n                </tr>\n            );\n        });\n        setitems(searchResults);\n    }\n\n    useEffect(() => {\n        Search(location);\n    }, [location]);\n\n    async function handleKeyDown(e) {\n        if (e.key === \"Enter\") {\n            const reset = (err) => {\n                setValidationError(err);\n                history.push(\"/\");\n                setHits(0);\n                setitems([]);\n            };\n\n            if (value.length < 1) {\n                return reset();\n            }\n\n            if (!value.match(/^[0-9a-zA-Z,-,+,\\s]+$/)) {\n                return reset(\"Search term has to be alphanumeric\");\n            }\n\n            if (value.length < 3) {\n                return reset(\"Search term length has to be longer than 3\");\n            }\n            history.push(\"/?\" + value);\n        }\n    }\n\n    const Pagination = () => {\n        if (hits / 100 < 1) {\n            return null;\n        }\n        return (\n            <div style={{ color: \"white\", width: \"30%\", margin: \"0 auto\" }}>\n                <ReactPaginate\n                    previousLabel={\"<--\"}\n                    nextLabel={\"-->\"}\n                    breakLabel={\"...\"}\n                    breakClassName={\"break-me\"}\n                    pageCount={hits / 100}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={3}\n                    onPageChange={(i) => {\n                        history.push(\n                            location.search.replace(/&page=\\d+/, \"\") +\n                                \"&page=\" +\n                                ++i.selected\n                        );\n                    }}\n                    containerClassName={\"pagination\"}\n                    activeClassName={\"active\"}\n                />\n            </div>\n        );\n    };\n\n    return (\n        <div className=\"Center\">\n            <br />\n            <br />\n            <h1 style={{ color: \"white\", fontSize: 22 }}>\n                Haskell IRC Log Search\n            </h1>\n            <h2 style={{ color: \"white\", fontSize: 17 }}>2002 - 2020</h2>\n            <br />\n            <input\n                style={{ height: 30, width: 500, fontSize: 17, color: \"grey\" }}\n                value={value}\n                onChange={(e) => setValue(e.target.value)}\n                onKeyDown={handleKeyDown}\n            />\n            <br />\n            <br />\n            <div style={{ color: \"grey\" }}>\n                {hits\n                    ? \"Found matches in \" + hits + \" files (days)\"\n                    : validationError}\n            </div>\n            <br />\n            <div className=\"SearchResults\">\n                <div style={{ color: \"grey\" }} className=\"App\">\n                    <table padding={5}>{items}</table>\n                </div>\n                <br />¬{Pagination()}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import \"./App.css\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router-dom\";\nimport { HashLink as Link } from \"react-router-hash-link\";\nimport React, { useState, useEffect } from \"react\";\nimport mem from \"mem\";\n\nfunction Logs() {\n    const [items, setitems] = useState([]);\n    const location = useLocation();\n    const path = location.pathname;\n\n    async function GetText(location) {\n        const name = location.pathname.replace(\"/logs/\", \"\");\n        const res = await axios(\"https://logs.beuke.org/file/\" + name);\n\n        const randomColor = mem(() =>\n            \"#xxxxxx\".replace(/x/g, (y) =>\n                ((Math.random() * 16) | 0).toString(16)\n            )\n        );\n\n        const arr = res.data.split(\"\\n\").flat(0).map((value, index) => {\n            const i = index + 1;\n            if (!value) return\n            const log = value.split(\" \");\n            const timestamp = log[0];\n            const name = log[1].slice(0,20);\n            const text = log.slice(2).join(\" \");\n            return (\n                <tr>\n                        <Link to={\"#\" + i} id={i}>\n                    <td>\n                            <div\n                                style={{\n                                    color: \"grey\",\n                                    display: \"inline\",\n                                }}\n                            >\n                                {timestamp}\n                            </div>\n                    </td>\n                        </Link>\n                    <td>\n                        <div\n                            style={{\n                                color: randomColor(name),\n                                display: \"inline\",\n                            }}\n                        >\n                            {name}\n                        </div>\n                    </td>\n                    <td>\n                        <div\n                            style={{\n                                color: \"black\",\n                                display: \"inline\",\n                            }}\n                        >\n                            {text}\n                        </div>\n                    </td>\n                </tr>\n            );\n        });\n        setitems(arr);\n\n        // async loaded content does not scroll into view, neither with HashRouter\n        // nor with any other Router type, hence we need to kick it manually\n        if (location.hash) {\n            const id = location.hash.replace(\"#\", \"\");\n            const element = document.getElementById(id);\n            if (element) element.scrollIntoView({ block: \"start\" });\n        }\n    }\n\n    useEffect(() => {\n        GetText(location);\n    }, [path]);\n\n    return (\n        <div className=\"Center\">\n            <table padding={5}>\n                <div className=\"App\">{items}</div>\n            </table>\n        </div>\n    );\n}\n\nexport default Logs;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Logs from \"./Logs\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport { enable as enableDarkMode } from 'darkreader';\n\nenableDarkMode({\n    brightness: 80,\n    contrast: 85,\n    sepia: 30,\n})\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <Route path=\"/logs\">\n                <Logs />\n            </Route>\n            <Route exact path=\"/\">\n                <App />\n            </Route>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}